//
//  LogsPresenter.swift
//  IteoLogger
//
//  Created by Patryk Średziński on 05/02/2021.
//  Copyright (c) 2021 iteo. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates by Patryk Średziński
//

import UIKit

protocol LogsPresenter: SpinnerPresenter, AlertPresenter {
    func buildSection(index: Int, logs: [IteoLoggerItem])
    func reloadLogs()
}

final class LogsPresenterImpl<T: LogsPresentable>: BasePresenter<T> {
    
    private let dateFormatter: DateFormatManager
    
    init(dateFormatter: DateFormatManager = .shared) {
        self.dateFormatter = dateFormatter
    }
    
}

extension LogsPresenterImpl: LogsPresenter {
    
    func buildSection(index: Int, logs: [IteoLoggerItem]) {
        
        var cellItems: [LogCellItem] = []
        
        var previousLogDate: Date?
        logs.forEach { log in
            if let previousDate = previousLogDate {
                let timeDifference = previousDate.timeIntervalSince1970 - log.date.timeIntervalSince1970
                if timeDifference > 10 {
                    cellItems.append(.pause(length: timeDifference))
                }
            }
            cellItems.append(.log(item: log))
            previousLogDate = log.date
        }
        
        DispatchQueue.main.async {
            self.controller?.appendNewSection(section: LogSectionItem(index: index,
                                                                      date: self.dateFormatter.string(from: previousLogDate ?? Date(), format: .fullDate),
                                                                      items: cellItems))
        }
        
    }
    
    func reloadLogs() {
        
        DispatchQueue.main.async {
            self.controller?.resetLogs()
        }
        
    }
}
